[tool.poetry]
name = "Trickster"
description = "Trickster is a python service for mocking APIs."
version = "3.0.0rc4"
authors = ["Jakub Tesarek <jakub@tesarek.me>"]
readme = "README.md"
include = ["pyproject.toml", "README.md", "config.json"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.103.0"
uvicorn = "^0.23.0"
pydantic-settings = "^2.0.3"
urllib3 = "^2.0.7"
openapi3-parser = "^1.1.14"
jsonschema = "^4.19.2"
types-jsonschema = "^4.19.0.4"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
ruff = "^0.0.269"
mypy = "^1.5.0"
poethepoet = "^0.24.0"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"
httpx = "^0.25.0"

[tool.poetry.plugins]
[tool.poetry.plugins."console_scripts"]
"trickster" = "trickster.trickster_app:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
explicit_package_bases = true

[tool.pytest.ini_options]
testpaths = "tests"
python_files = "*.py"
addopts = "--showlocals -rxs -v --color=yes --durations=5 --maxfail=1 --cov=trickster --cov-report html --cov-report term"

[tool.ruff]
line-length = 120
extend-exclude = ["tests"]
select = ["E", "F", "C90", "W", "N", "D", "DTZ", "ERA", "PTH", "A", "T201", "SIM"]  # see https://beta.ruff.rs/docs/rules/
ignore = ["D105", "D106", "D107", "D203", "D213"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["D104"]

[tool.ruff.mccabe]
max-complexity = 6

[tool.poe.tasks.run]
help = "Run Trickster"
cmd = "docker-compose up"

[tool.poe.tasks.build]
help = "Build Trickster"
cmd = "docker-compose build"

[tool.poe.tasks.typing]
help = "Run Mypy type checker"
cmd = "mypy trickster"

[tool.poe.tasks.style]
help = "Run Ruff style checker"
cmd = "ruff check trickster"

[tool.poe.tasks.test]
help = "Run Pytest tests"
cmd = "pytest tests"

[tool.poe.tasks.check]
help = "Run all checks"
sequence = ["typing", "style", "test"]
